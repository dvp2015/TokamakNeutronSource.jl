name: CI
on:
  push:
    branches:
      - master
      - devel
    tags: ["*"]
  pull_request:
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      # minimal testing
      matrix:
        version: ["1"]
        os: [ubuntu-latest]
        arch: [x64]
      # complete testing  TODO: switch to this, when code is stable
      # matrix:
      #   version: ["1", "nightly", "1.9.0-alpha1", "1.6.7"]
      #   os: [ubuntu-latest, windows-latest, macOS-latest]
      #   arch: [x64, x86]
      # exclude:
      #   - os: macOS-latest
      #     julia-arch: x86
    steps:
      - uses: actions/checkout@v3
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v3.1.1
        with:
          files: lcov.info
  docs:
    # if: false  # enable when EQDSKReader is registered and can be installed
    name: Documentation test
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: julia-actions/setup-julia@v1
        with:
          version: "1"
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-docdeploy@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # For authentication with GitHub Actions token
